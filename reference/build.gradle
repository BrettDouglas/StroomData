version = '0.1'

apply plugin: 'java'

sourceCompatibility = 1.8
targetCompatibility = 1.8

defaultTasks = ['clean', 'jar']


File javaHome = new File(System.getProperty('java.home'))
logger.lifecycle "Using Java from $javaHome (version ${System.getProperty('java.version')})"

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    compile 'log4j:log4j:1.2.17'
    compile 'javax.servlet:javax.servlet-api:3.1.0'
    compile 'org.eclipse.jetty.aggregate:jetty-all:9.2.2.v20140723'
    compile 'org.json:json:20140107'
    testCompile 'junit:junit:4.+'
    testCompile 'com.mashape.unirest:unirest-java:1.4.7'
    // testCompile 'org.mockito:mockito-core:1.10.8'
}

jar {
    def versionFile = file('./src/main/resources/version.properties')
 
    if(versionFile.canRead()){
        def Properties props=new Properties()
        props.load(new FileInputStream(versionFile))
        def buildNumber=props['BUILD_NUMBER'].toInteger()+1
        props['BUILD_NUMBER']=buildNumber.toString()
        props['BUILD_DATE']=new Date().format("yyyy-MM-dd'T'HH:mm:ss'Z'",TimeZone.getTimeZone("UTC")).toString()
        props['BUILD_VERSION']=version
        props.store(versionFile.newWriter(),null)
    }

     baseName="multihost"
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    manifest {
        attributes 'Implementation-Title': 'Multi Host Reference Server', 'Implementation-Version': version, 'Main-Class': 'me.doubledutch.stroom.MultiHostServer'
    }
    into('site') {
        from 'site'
    }
}
